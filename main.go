package main

import (
	"log"
	"net/http"

	jwt "github.com/appleboy/gin-jwt"
	"github.com/gin-gonic/gin"
	"github.com/karuppaiah/shopping/controller"
	_ "github.com/karuppaiah/shopping/docs" // docs is generated by Swag CLI, you have to import it.
	"github.com/karuppaiah/shopping/middleware"
	"github.com/swaggo/gin-swagger"              // gin-swagger middleware
	"github.com/swaggo/gin-swagger/swaggerFiles" // swagger embed files
)

func init() {
	// setupRouter()
}

func setupRouter() *gin.Engine {
	// Disable Console Color
	// gin.DisableConsoleColor()

	r := gin.Default()
	// the jwt middleware
	authMiddleware := middleware.AuthMiddleware()
	// API's to get JWT toekn
	r.POST("/login", authMiddleware.LoginHandler)

	r.NoRoute(authMiddleware.MiddlewareFunc(), func(c *gin.Context) {
		claims := jwt.ExtractClaims(c)
		log.Printf("NoRoute claims: %#v\n", claims)
		c.JSON(404, gin.H{"code": "PAGE_NOT_FOUND", "message": "Page not found"})
	})

	// API's with JWT authentication
	auth := r.Group("/auth")
	auth.Use(authMiddleware.MiddlewareFunc())
	{

		auth.GET("/refresh_token", authMiddleware.RefreshHandler)

		auth.POST("/products", controller.HandlePostProducts)
		auth.DELETE("/products", controller.HandleDelProducts)

		auth.GET("/cart", controller.HandleGetCart)
		auth.POST("/cart", controller.HandlePostCart)
		auth.DELETE("/cart", controller.HandleDelCart)

		auth.GET("/promotion", controller.HandleGetPromotion)
		auth.POST("/promotion", controller.HandlePostPromotion)
		auth.DELETE("/promotion", controller.HandleDelPromotion)

	}

	// r.Use(Cors())

	// Public API's without JWT authentication
	// HealthCheck
	r.GET("/ping", func(c *gin.Context) {
		c.String(http.StatusOK, "pong")
	})
	r.GET("/", controller.HandlerRoot)
	r.GET("/products", controller.HandleGetProducts)

	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))
	return r

}

// @title Swagger Shopping API
// @version 1.0
// @description This is a shopping server.
// @termsOfService http://swagger.io/terms/

// @contact.name KAL
// @contact.url http://www.swagger.io/support
// @contact.email haiappurak@gmail.com

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @host localhost:8080
// @BasePath /

// @securityDefinitions.basic BasicAuth

// @securityDefinitions.apikey ApiKeyAuth
// @in header
// @name Authorization

// @securitydefinitions.oauth2.application OAuth2Application
// @tokenUrl https://example.com/oauth/token
// @scope.write Grants write access
// @scope.admin Grants read and write access to administrative information

// @securitydefinitions.oauth2.implicit OAuth2Implicit
// @authorizationurl https://example.com/oauth/authorize
// @scope.write Grants write access
// @scope.admin Grants read and write access to administrative information

// @securitydefinitions.oauth2.password OAuth2Password
// @tokenUrl https://example.com/oauth/token
// @scope.read Grants read access
// @scope.write Grants write access
// @scope.admin Grants read and write access to administrative information

// @securitydefinitions.oauth2.accessCode OAuth2AccessCode
// @tokenUrl https://example.com/oauth/token
// @authorizationurl https://example.com/oauth/authorize
// @scope.admin Grants read and write access to administrative information
func main() {
	r := setupRouter()
	r.Run(":8080")
}
